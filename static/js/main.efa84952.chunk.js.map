{"version":3,"sources":["images/doodlebluelogo.png","create-account/CreateAccount.js","mail-details/mail-list/MailList.js","mail-details/side-nav/SideNav.js","actions/index.js","mail-details/compose-mail/ComposeMail.js","mail-details/header/Header.js","mail-details/MailDetails.js","Dashboard.js","ErrorBoundary.js","App.js","serviceWorker.js","reducers/accReducer.js","reducers/mailReducer.js","reducers/index.js","index.js"],"names":["module","exports","CreateAccount","props","state","handleInputChange","bind","handleLoadImage","handleSubmit","event","this","setState","target","name","value","imageUrl","window","URL","createObjectURL","files","preventDefault","handleValidation","userId","firstName","toLowerCase","Date","getTime","addUser","setInitMailCount","alert","history","push","process","validatePass","mandArr","Object","keys","mandatory","i","length","el","required","document","querySelector","focus","className","id","onSubmit","htmlFor","type","onChange","placeholder","lastName","emailId","mobileNum","onClick","React","Component","withRouter","MailList","mails","style","textAlign","paddingTop","fontSize","map","classList","readFlag","key","mailTime","mailSubject","mailBody","inbox","sent","user","location","console","log","pathname","composeMail","indexOf","payload","sendMail","mailObj","ComposeMail","userList","useSelector","accReducer","dispatch","useDispatch","useState","userMailIdList","setUserMailIdList","selectUserIdList","setSelectUserIdList","handleUserSelect","remove","selectUserId","getAttribute","contains","parentElement","deleteRecipientId","recipientElem","recipientId","updateSelectUserList","filter","data-key","tempVal","filterUserId","startsWith","add","currDate","senderId","recipientsId","getElementById","getMonth","getDate","getFullYear","getHours","getMinutes","profilepic","useEffect","currUserElem","userListElem","addEventListener","handleUserChange","selectedUserId","tagName","src","doodlebluelogo","alt","MailDetails","match","userObj","params","inboxMail","mailReducer","inboxmail","sentMail","sentmail","inboxCount","inboxcount","sentMailCount","sentcount","newMailFlag","setNewMailFlag","handleMailFlagChange","width","height","overflow","display","exact","path","component","from","x","y","opacity","to","duration","brandlogo","delay","ErrorBoundary","hasError","margin","maxWidth","reload","children","error","App","mapDispatchToProps","basename","Dashboard","connect","Boolean","hostname","action","newUserObj","assign","defaultObj","defaultMailObj","initialMailObj","newMailObj","senderObj","undefined","receiverObj","rootReducer","combineReducers","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efa84952.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doodlebluelogo.8f900bba.png\";","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './createaccount.css';\r\n\r\nclass CreateAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'firstName': '',\r\n            'lastName': '',\r\n            'emailId': '',\r\n            'mobileNum': '',\r\n            'profilepic': '',\r\n            'userId': '',\r\n            'mandatory': {\r\n                'firstName': {\r\n                    'name': 'First Name',\r\n                    'required': true\r\n                },\r\n                'lastName': {\r\n                    'name': 'Last Name',\r\n                    'required': true\r\n                },\r\n                'emailId': {\r\n                    'name': 'Email ID',\r\n                    'required': true\r\n                },\r\n                'mobileNum': {\r\n                    'name': 'Mobile Number',\r\n                    'required': true\r\n                },\r\n                'profilepic': {\r\n                    'name': 'Profile Picture',\r\n                    'required': true\r\n                },\r\n            }\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleLoadImage = this.handleLoadImage.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleLoadImage(event) {\r\n        //const fileReader = new FileReader();\r\n        const imageUrl = window.URL.createObjectURL(event.target.files[0])\r\n        this.setState({ [event.target.name]: imageUrl });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.handleValidation() === false) {\r\n            return;\r\n        }\r\n        const userId = `${this.state.firstName.toLowerCase()}_${new Date().getTime()}`;\r\n        await this.setState({ 'userId': userId });\r\n        this.props.addUser(this.state);\r\n        this.props.setInitMailCount(this.state);\r\n        alert('User Added successfully');\r\n        this.props.history.push(`${process.env.PUBLIC_URL}/mailApp/inbox/${userId}`);\r\n    }\r\n\r\n    handleValidation() {\r\n        let validatePass = true;\r\n        let mandArr = Object.keys(this.state.mandatory);\r\n        for (let i = 0; i < mandArr.length; i++) {\r\n            let el = mandArr[i];\r\n            if (this.state.mandatory[el].required && this.state[el] === '') {\r\n                document.querySelector(`input[name='${el}']`).focus()\r\n                alert(`${this.state.mandatory[el].name} is mandatory`);\r\n                validatePass = false;\r\n                break;\r\n            }\r\n        }\r\n        return validatePass;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='create-acc-containter'>\r\n                <div className='create-acc-content'>\r\n                    <form id=\"addUserForm\" className='create-acc-form' onSubmit={this.handleSubmit}>\r\n                        <div className='form-input'>\r\n                            <label htmlFor={this.state.firstName}>First Name*</label>\r\n                            <input type=\"text\" value={this.state.firstName} name='firstName' onChange={this.handleInputChange} placeholder='Doodleblue' />\r\n                        </div>\r\n                        <div className='form-input'>\r\n                            <label htmlFor={this.state.lastName}>Last Name*</label>\r\n                            <input type=\"text\" value={this.state.lastName} name='lastName' onChange={this.handleInputChange} placeholder='Innovations' />\r\n                        </div>\r\n                        <div className='form-input'>\r\n                            <label htmlFor={this.state.emailId}>Email ID*</label>\r\n                            <input type=\"email\" value={this.state.emailId} name='emailId' onChange={this.handleInputChange} placeholder='doodleblue@example.com' />\r\n                        </div>\r\n                        <div className='form-input'>\r\n                            <label htmlFor={this.state.mobileNum}>Mobile No*</label>\r\n                            <input type=\"number\" value={this.state.mobileNum} name='mobileNum' onChange={this.handleInputChange} placeholder='00000 00000' />\r\n                        </div>\r\n                        <div className='form-input'>\r\n                            <label htmlFor='profilepic'>Profile Image</label>\r\n                            <input type=\"file\" name='profilepic' onChange={this.handleLoadImage} placeholder='Choose file' />\r\n                        </div>\r\n                    </form>\r\n                    <button id=\"addUser\" onClick={this.handleSubmit}>Add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateAccount);","import React, { useState } from 'react';\r\nimport './maillist.css';\r\n\r\nexport default function MailList(props) {\r\n    const { mails } = props;\r\n    // const [mailList, setMailList] = useState([]);\r\n\r\n    // setMailList(mails);\r\n    const styles = {\r\n        textAlign: 'center',\r\n        paddingTop: '30px',\r\n        fontSize: '25px'\r\n    }\r\n\r\n    if (mails.length == 0) {\r\n        return (\r\n            <div className='mail-dets-list-content' style={styles}>\r\n                No mail is present in the box!!!\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='mail-dets-list-content'>\r\n            {\r\n                mails.map(el => {\r\n                    let classList = 'mail-dets-list';\r\n                    if (!el.readFlag) {\r\n                        classList += ' unread-mail-body';\r\n                    }\r\n                    return (\r\n                        <div className={classList} key={el.mailTime}>\r\n                            <div className='mail-subject'>{el.mailSubject}</div>\r\n                            <div className='mail-body'>{el.mailBody}</div>\r\n                            <div className='mail-time'>{el.mailTime}</div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './sidenav.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction SideNav(props) {\r\n    const { inbox, sent, history, user, location } = props;\r\n\r\n    console.log(location.pathname);\r\n\r\n    return (\r\n        <div className='side-nav-bar'>\r\n            <button id='composeMailBtn' onClick={() => props.composeMail()}>Compose</button>\r\n            <ul>\r\n                <li className={location.pathname.indexOf('/inbox/') > 0 ? 'active' : ''} onClick={() => history.push(`${process.env.PUBLIC_URL}/mailApp/inbox/${user.userId}`)}>\r\n                    Inbox\r\n                    <span className='unread-mail' id='unreadMailInbox'>{inbox}</span>\r\n                </li>\r\n                <li className={location.pathname.indexOf('/sent/') > 0 ? 'active' : ''} onClick={() => history.push(`${process.env.PUBLIC_URL}/mailApp/sent/${user.userId}`)}>\r\n                    Sent\r\n                    <span className='unread-mail' id='unreadMailSent'>{sent}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(SideNav);","export const addUser = (user) => {\r\n    return {\r\n        type: 'CREATEACCOUNT',\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const sendMail = (mailObj) => {\r\n    return {\r\n        type: 'SENDMAIL',\r\n        payload: mailObj\r\n    }\r\n}\r\n\r\nexport const setInitMailCount = (user) => {\r\n    return {\r\n        type: 'INITIALMAILCOUNT',\r\n        payload: user\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sendMail } from './../../actions';\r\nimport './composemail.css';\r\n\r\nexport default function ComposeMail(props) {\r\n    const { userId } = props.user;\r\n    const userList = useSelector(state => state.accReducer);\r\n    const dispatch = useDispatch();\r\n    const [userMailIdList, setUserMailIdList] = useState([]);\r\n    const [selectUserIdList, setSelectUserIdList] = useState([]);\r\n\r\n    const handleRecipientChange = (event) => {\r\n        let tempVal = event.target.value;\r\n        if (tempVal.length >= 3) {\r\n            let filterUserId = Object.keys(userList).filter(el => {\r\n                return userId !== el && userList[el] && userList[el].firstName.toLowerCase().startsWith(tempVal.toLowerCase());\r\n            });\r\n            if (filterUserId.length > 0) {\r\n                setUserMailIdList([filterUserId]);\r\n                document.querySelector('.user-mail-list').classList.add('active');\r\n            }\r\n        } else {\r\n            document.querySelector('.user-mail-list').classList.remove('active');\r\n        }\r\n    }\r\n\r\n    const handleUserSelect = (event) => {\r\n        document.querySelector('.user-mail-list').classList.remove('active');\r\n        let selectUserId = event.target.getAttribute('data-key');\r\n        if (!event.target.classList.contains('user-mail-details')) {\r\n            selectUserId = event.target.parentElement.getAttribute('data-key');\r\n        }\r\n        setSelectUserIdList([...selectUserIdList, selectUserId]);\r\n        setUserMailIdList([]);\r\n        event.target.value = '';\r\n    }\r\n\r\n    const handleSendMail = () => {\r\n        let currDate = new Date()\r\n        let mailObj = {\r\n            senderId: userId,\r\n            recipientsId: selectUserIdList,\r\n            mailSubject: document.getElementById('subjectInp').value,\r\n            mailBody: document.getElementById('messageInp').value,\r\n            mailTime: `${currDate.getMonth() + 1}/${currDate.getDate()}/${currDate.getFullYear()} ${currDate.getHours()}:${currDate.getMinutes()}`\r\n        }\r\n        dispatch(sendMail(mailObj));\r\n        alert('Mail sent!!!');\r\n        props.composeMail();\r\n    }\r\n\r\n    const deleteRecipientId = (event) => {\r\n        let recipientElem = event.target.parentElement;\r\n        let recipientId = recipientElem.getAttribute('data-key');\r\n        let updateSelectUserList = selectUserIdList.filter(el => {\r\n            return el !== recipientId;\r\n        });\r\n        setSelectUserIdList([updateSelectUserList]);\r\n        recipientElem.remove();\r\n    }\r\n\r\n    return (\r\n        <div className='compose-mail'>\r\n            <div className='header'>\r\n                New Message\r\n                <button id=\"closeComposeMail\" onClick={() => props.composeMail()}>X</button>\r\n            </div>\r\n            <div className='container recipient-container'>\r\n                <div className='recipientList'>\r\n                    {\r\n                        selectUserIdList.map(el => {\r\n                            return (\r\n                                <span className='recipient' key={el} data-key={el} >\r\n                                    {userList[el] && userList[el].firstName}\r\n                                    <span className='recipient-del' onClick={deleteRecipientId}>X</span>\r\n                                </span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <input id=\"recipientInp\" name='recipients' placeholder='Recipients (Type username here)' onChange={handleRecipientChange} />\r\n            </div>\r\n            <div className='container subject-container'>\r\n                <input id=\"subjectInp\" type='text' name='subject' placeholder='Subject' />\r\n            </div>\r\n            <div className='container message-container'>\r\n                <textarea id=\"messageInp\" name='message' placeholder='Type Something here..' />\r\n            </div>\r\n            <div className='container footer'>\r\n                <button id=\"sendMailBtn\" onClick={handleSendMail}>Send</button>\r\n            </div>\r\n            <div className='user-mail-list'>\r\n                {\r\n                    userMailIdList.map(el => {\r\n                        return (\r\n                            <div className='user-mail-details' key={el} data-key={el} onClick={handleUserSelect}>\r\n                                <div className='user-mail-name'>{userList[el].firstName}</div>\r\n                                <div className='user-mail-id'>{userList[el].emailId}</div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport doodlebluelogo from '../../images/doodlebluelogo.png';\r\nimport { useSelector } from 'react-redux';\r\nimport './header.css';\r\n\r\nfunction Header(props) {\r\n    const { history } = props;\r\n    const { userId, firstName, profilepic } = props.user;\r\n    const userList = useSelector(state => state.accReducer);\r\n    //console.log(userList);\r\n    useEffect(() => {\r\n        const currUserElem = document.querySelector('#currUser');\r\n        const userListElem = document.querySelector('#userList');\r\n        currUserElem.addEventListener('mouseover', () => {\r\n            document.getElementById('userList').classList.add('active');\r\n        });\r\n        currUserElem.addEventListener('mouseout', () => {\r\n            document.getElementById('userList').classList.remove('active');\r\n        });\r\n        userListElem.addEventListener('mouseover', () => {\r\n            document.getElementById('userList').classList.add('active');\r\n        });\r\n        userListElem.addEventListener('mouseout', () => {\r\n            document.getElementById('userList').classList.remove('active');\r\n        });\r\n    }, []);\r\n\r\n    const handleUserChange = (event) => {\r\n        let selectedUserId = event.target.getAttribute('data-key');\r\n        if (event.target.tagName === 'DIV') {\r\n            selectedUserId = event.target.parentElement.getAttribute('data-key');\r\n        }\r\n        if (event.target.tagName === 'SPAN') {\r\n            selectedUserId = event.target.parentElement.parentElement.getAttribute('data-key');\r\n        }\r\n        history.push(`${process.env.PUBLIC_URL}/mailApp/inbox/${selectedUserId}`);\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className='logo'>\r\n                <img src={doodlebluelogo} alt='doodleblue' />\r\n            </div>\r\n            <div className='userDetails'>\r\n                <button id=\"createAccBtn\" onClick={() => history.push(process.env.PUBLIC_URL + '/createAccount')}>Create Account</button>\r\n                <div id='currUser'>\r\n                    <span key={userId} className=\"userName\">{firstName}</span>\r\n                    <img src={profilepic} alt=\"profilepic\" className=\"userPic\" />\r\n                </div>\r\n                <ul id=\"userList\">\r\n                    {\r\n                        Object.keys(userList).map(el => {\r\n                            if (userList[el].userId !== userId) {\r\n                                return (\r\n                                    <li key={userList[el].userId} data-key={userList[el].userId} onClick={handleUserChange}>\r\n                                        <div className='user-list-content'>\r\n                                            <span className='userName'>{userList[el].firstName}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import React, { useState } from 'react';\r\nimport MailList from './mail-list/MailList';\r\nimport SideNav from './side-nav/SideNav';\r\nimport ComposeMail from './compose-mail/ComposeMail';\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\nimport Header from './header/Header';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function MailDetails({ match }) {\r\n    const styles = {\r\n        width: '100%',\r\n        height: '90vh',\r\n        overflow: 'hidden',\r\n        display: 'inline-flex',\r\n    }\r\n\r\n    const userObj = useSelector(state => state.accReducer[match.params.userId]);\r\n    const inboxMail = useSelector(state => state.mailReducer[userObj.userId].inboxmail);\r\n    const sentMail = useSelector(state => state.mailReducer[userObj.userId].sentmail);\r\n    const inboxCount = useSelector(state => state.mailReducer[userObj.userId].inboxcount);\r\n    const sentMailCount = useSelector(state => state.mailReducer[userObj.userId].sentcount);\r\n\r\n    const [newMailFlag, setNewMailFlag] = useState(false);\r\n    const handleMailFlagChange = () => {\r\n        setNewMailFlag(!newMailFlag);\r\n    }\r\n\r\n    return (\r\n        <div className='mail-dets-content'>\r\n            <Header user={userObj} />\r\n            <div className='mail-details' style={styles}>\r\n                <SideNav user={userObj} composeMail={handleMailFlagChange} inbox={inboxCount} sent={sentMailCount} />\r\n                <Route exact path={process.env.PUBLIC_URL + '/mailApp/sent/:userId'} component={() => <MailList user={userObj} mails={sentMail} />} />\r\n                <Route exact path={process.env.PUBLIC_URL + '/mailApp/inbox/:userId'} component={() => <MailList user={userObj} mails={inboxMail} />} />\r\n                {newMailFlag ? <ComposeMail user={userObj} composeMail={handleMailFlagChange} /> : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './dashboard.css';\r\nimport { Tween } from 'react-gsap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport brandlogo from './images/doodlebluelogo.png';\r\n\r\nfunction Dashboard(props) {\r\n    const { history } = props;\r\n    return (\r\n        <div className='dashboard'>\r\n            <div className='logo-container'>\r\n                <Tween from={{ x: '0px', y: '100px', opacity: 0 }} to={{ x: '0px', y: '0px', opacity: 1 }} duration={0.7}>\r\n                    <img src={brandlogo} id=\"brandlogo\" alt=\"brandlogo\" />\r\n                </Tween>\r\n                <Tween from={{ y: '50px', opacity: 0 }} to={{ y: 0, opacity: 1 }} duration={0.5} delay={0.2}>\r\n                    <button onClick={() => history.push(process.env.PUBLIC_URL + '/createAccount')}>Create Account</button>\r\n                </Tween>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Dashboard);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n    console.log(props);\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className='error-container'>\r\n          <h1 style={{ margin: '10px 0px' }}>Oops!!! Something went wrong.</h1>\r\n          <h3 style={{ margin: '10px 0px' }}>Click below to go to Home page</h3>\r\n          <button style={{ margin: '10px 0px', maxWidth: '200px' }} id=\"createAccBtn\" onClick={() => { this.props.history.push(process.env.PUBLIC_URL + '/'); document.location.reload(); }}>Go to HomePage</button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ErrorBoundary);","import React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport CreateAccount from './create-account/CreateAccount';\nimport MailDetails from './mail-details/MailDetails';\nimport Dashboard from './Dashboard';\nimport ErrorBoundary from './ErrorBoundary';\nimport { connect } from 'react-redux';\nimport { addUser, setInitMailCount } from './actions'\nimport './App.css';\n\nfunction App() {\n  const mapDispatchToProps = {\n    addUser,\n    setInitMailCount\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <ErrorBoundary>\n            <Route path={process.env.PUBLIC_URL + '/'} component={Dashboard} exact />\n            <Route path={'/createAccount'} component={connect(null, mapDispatchToProps)(CreateAccount)} exact />\n            <Route path={'/mailApp/inbox/:userId'} component={MailDetails} exact />\n            <Route path={'/mailApp/sent/:userId'} component={MailDetails} exact />\n          </ErrorBoundary>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const accReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'CREATEACCOUNT':\r\n            let newUserObj = {};\r\n            newUserObj[action.payload.userId] = action.payload;\r\n            state = Object.assign({}, state, newUserObj);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default accReducer;","const mailReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'INITIALMAILCOUNT':\r\n            const defaultObj = {\r\n                'inboxcount': 0,\r\n                'sentcount': 0,\r\n                'inboxmail': [],\r\n                'sentmail': [],\r\n            }\r\n            let defaultMailObj = {};\r\n            defaultMailObj[action.payload.userId] = defaultObj;\r\n            state = Object.assign({}, state, defaultMailObj);\r\n            return state;\r\n        case 'SENDMAIL':\r\n            const initialMailObj = {\r\n                'inboxcount': 0,\r\n                'sentcount': 0,\r\n                'inboxmail': [],\r\n                'sentmail': [],\r\n            }\r\n            const readFlag = false;\r\n            let newMailObj = {};\r\n            let { senderId, recipientsId, mailSubject, mailBody, mailTime } = action.payload;\r\n            let senderObj = state[senderId] === undefined ? initialMailObj : state[senderId];\r\n            senderObj.sentcount += 1;\r\n            senderObj.sentmail = [...senderObj.sentmail, {\r\n                mailSubject, mailBody, mailTime, readFlag\r\n            }];\r\n            newMailObj[senderId] = senderObj;\r\n            recipientsId.map(el => {\r\n                let receiverObj = state[el] === undefined ? initialMailObj : state[el];\r\n                receiverObj.inboxcount += 1;\r\n                receiverObj.inboxmail = [...receiverObj.inboxmail, {\r\n                    mailSubject, mailBody, mailTime, readFlag\r\n                }];\r\n                newMailObj[el] = receiverObj;\r\n            });\r\n            state = Object.assign({}, state, newMailObj);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default mailReducer;","import { combineReducers } from 'redux';\r\nimport accReducer from './accReducer';\r\nimport mailReducer from './mailReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    accReducer,\r\n    mailReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}