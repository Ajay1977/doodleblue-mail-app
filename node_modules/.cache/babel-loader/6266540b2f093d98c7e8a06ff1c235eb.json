{"ast":null,"code":"const mailReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INITIALMAILCOUNT':\n      const defaultObj = {\n        'inboxcount': 0,\n        'sentcount': 0,\n        'inboxmail': [],\n        'sentmail': []\n      };\n      let defaultMailObj = {};\n      defaultMailObj[action.payload.userId] = defaultObj;\n      state = Object.assign({}, state, defaultMailObj);\n      return state;\n\n    case 'SENDMAIL':\n      const initialMailObj = {\n        'inboxcount': 0,\n        'sentcount': 0,\n        'inboxmail': [],\n        'sentmail': []\n      };\n      const readFlag = false;\n      let newMailObj = {};\n      let _action$payload = action.payload,\n          senderId = _action$payload.senderId,\n          recipientsId = _action$payload.recipientsId,\n          mailSubject = _action$payload.mailSubject,\n          mailBody = _action$payload.mailBody,\n          mailTime = _action$payload.mailTime;\n      let senderObj = state[senderId] === undefined ? initialMailObj : state[senderId];\n      senderObj.sentcount += 1;\n      senderObj.sentmail = Object.assign([], ...senderObj.sentmail, {\n        mailSubject,\n        mailBody,\n        mailTime,\n        readFlag\n      });\n      newMailObj[senderId] = senderObj;\n      recipientsId.map(el => {\n        let receiverObj = state[el] === undefined ? initialMailObj : state[el];\n        receiverObj.inboxcount += 1;\n        receiverObj.inboxmail = Object.assign([], ...receiverObj.inboxmail, {\n          mailSubject,\n          mailBody,\n          mailTime,\n          readFlag\n        });\n        newMailObj[el] = receiverObj;\n      });\n      state = Object.assign({}, state, newMailObj);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default mailReducer;","map":{"version":3,"sources":["E:\\AJAY-offce_works\\Projects\\ReactProj\\doodleblue-mail-app\\src\\reducers\\mailReducer.js"],"names":["mailReducer","state","action","type","defaultObj","defaultMailObj","payload","userId","Object","assign","initialMailObj","readFlag","newMailObj","senderId","recipientsId","mailSubject","mailBody","mailTime","senderObj","undefined","sentcount","sentmail","map","el","receiverObj","inboxcount","inboxmail"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,YAAMC,UAAU,GAAG;AACf,sBAAc,CADC;AAEf,qBAAa,CAFE;AAGf,qBAAa,EAHE;AAIf,oBAAY;AAJG,OAAnB;AAMA,UAAIC,cAAc,GAAG,EAArB;AACAA,MAAAA,cAAc,CAACH,MAAM,CAACI,OAAP,CAAeC,MAAhB,CAAd,GAAwCH,UAAxC;AACAH,MAAAA,KAAK,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyBI,cAAzB,CAAR;AACA,aAAOJ,KAAP;;AACJ,SAAK,UAAL;AACI,YAAMS,cAAc,GAAG;AACnB,sBAAc,CADK;AAEnB,qBAAa,CAFM;AAGnB,qBAAa,EAHM;AAInB,oBAAY;AAJO,OAAvB;AAMA,YAAMC,QAAQ,GAAG,KAAjB;AACA,UAAIC,UAAU,GAAG,EAAjB;AARJ,4BASsEV,MAAM,CAACI,OAT7E;AAAA,UASUO,QATV,mBASUA,QATV;AAAA,UASoBC,YATpB,mBASoBA,YATpB;AAAA,UASkCC,WATlC,mBASkCA,WATlC;AAAA,UAS+CC,QAT/C,mBAS+CA,QAT/C;AAAA,UASyDC,QATzD,mBASyDA,QATzD;AAUI,UAAIC,SAAS,GAAGjB,KAAK,CAACY,QAAD,CAAL,KAAoBM,SAApB,GAAgCT,cAAhC,GAAiDT,KAAK,CAACY,QAAD,CAAtE;AACAK,MAAAA,SAAS,CAACE,SAAV,IAAuB,CAAvB;AACAF,MAAAA,SAAS,CAACG,QAAV,GAAqBb,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,GAAGS,SAAS,CAACG,QAA/B,EAAyC;AAC1DN,QAAAA,WAD0D;AAC7CC,QAAAA,QAD6C;AACnCC,QAAAA,QADmC;AACzBN,QAAAA;AADyB,OAAzC,CAArB;AAGAC,MAAAA,UAAU,CAACC,QAAD,CAAV,GAAuBK,SAAvB;AACAJ,MAAAA,YAAY,CAACQ,GAAb,CAAiBC,EAAE,IAAI;AACnB,YAAIC,WAAW,GAAGvB,KAAK,CAACsB,EAAD,CAAL,KAAcJ,SAAd,GAA0BT,cAA1B,GAA2CT,KAAK,CAACsB,EAAD,CAAlE;AACAC,QAAAA,WAAW,CAACC,UAAZ,IAA0B,CAA1B;AACAD,QAAAA,WAAW,CAACE,SAAZ,GAAwBlB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,GAAGe,WAAW,CAACE,SAAjC,EAA4C;AAChEX,UAAAA,WADgE;AACnDC,UAAAA,QADmD;AACzCC,UAAAA,QADyC;AAC/BN,UAAAA;AAD+B,SAA5C,CAAxB;AAGAC,QAAAA,UAAU,CAACW,EAAD,CAAV,GAAiBC,WAAjB;AACH,OAPD;AAQAvB,MAAAA,KAAK,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyBW,UAAzB,CAAR;AACA,aAAOX,KAAP;;AACJ;AACI,aAAOA,KAAP;AAvCR;AAyCH,CA1CD;;AA4CA,eAAeD,WAAf","sourcesContent":["const mailReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'INITIALMAILCOUNT':\r\n            const defaultObj = {\r\n                'inboxcount': 0,\r\n                'sentcount': 0,\r\n                'inboxmail': [],\r\n                'sentmail': [],\r\n            }\r\n            let defaultMailObj = {};\r\n            defaultMailObj[action.payload.userId] = defaultObj;\r\n            state = Object.assign({}, state, defaultMailObj);\r\n            return state;\r\n        case 'SENDMAIL':\r\n            const initialMailObj = {\r\n                'inboxcount': 0,\r\n                'sentcount': 0,\r\n                'inboxmail': [],\r\n                'sentmail': [],\r\n            }\r\n            const readFlag = false;\r\n            let newMailObj = {};\r\n            let { senderId, recipientsId, mailSubject, mailBody, mailTime } = action.payload;\r\n            let senderObj = state[senderId] === undefined ? initialMailObj : state[senderId];\r\n            senderObj.sentcount += 1;\r\n            senderObj.sentmail = Object.assign([], ...senderObj.sentmail, {\r\n                mailSubject, mailBody, mailTime, readFlag\r\n            });\r\n            newMailObj[senderId] = senderObj;\r\n            recipientsId.map(el => {\r\n                let receiverObj = state[el] === undefined ? initialMailObj : state[el];\r\n                receiverObj.inboxcount += 1;\r\n                receiverObj.inboxmail = Object.assign([], ...receiverObj.inboxmail, {\r\n                    mailSubject, mailBody, mailTime, readFlag\r\n                });\r\n                newMailObj[el] = receiverObj;\r\n            });\r\n            state = Object.assign({}, state, newMailObj);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default mailReducer;"]},"metadata":{},"sourceType":"module"}