{"ast":null,"code":"import _slicedToArray from \"E:\\\\AJAY-offce_works\\\\Projects\\\\ReactProj\\\\doodleblue-mail-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\AJAY-offce_works\\\\Projects\\\\ReactProj\\\\doodleblue-mail-app\\\\src\\\\mail-details\\\\compose-mail\\\\ComposeMail.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { sendMail } from './../../actions';\nimport './composemail.css';\nexport default function ComposeMail(props) {\n  const userId = props.user.userId;\n  const userList = useSelector(state => state.accReducer);\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        userMailIdList = _useState2[0],\n        setUserMailIdList = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectUserIdList = _useState4[0],\n        setSelectUserIdList = _useState4[1];\n\n  const handleRecipientChange = event => {\n    let tempVal = event.target.value;\n\n    if (tempVal.length >= 3) {\n      let filterUserId = Object.keys(userList).filter(el => {\n        return userId != el && userList[el] && userList[el].firstName.toLowerCase().startsWith(tempVal.toLowerCase());\n      });\n\n      if (filterUserId.length > 0) {\n        setUserMailIdList([filterUserId]);\n        document.querySelector('.user-mail-list').classList.add('active');\n      }\n    } else {\n      document.querySelector('.user-mail-list').classList.remove('active');\n    }\n  };\n\n  const handleUserSelect = event => {\n    document.querySelector('.user-mail-list').classList.remove('active');\n    let selectUserId = event.target.getAttribute('data-key');\n    setSelectUserIdList([...selectUserIdList, selectUserId]);\n    setUserMailIdList([]);\n    event.target.value = '';\n  };\n\n  const handleSendMail = () => {\n    let currDate = new Date();\n    let recipientsId = []; // let recipientList = document.querySelector('#recipientList').children\n    // for (let i = 0; i < recipientList.length; i++) {\n    //     recipientsId(recipientList[0].getAttribute('data-key'));\n    // }\n\n    let mailObj = {\n      senderId: userId,\n      recipientsId: selectUserIdList,\n      mailSubject: document.getElementById('subjectInp').value,\n      mailBody: document.getElementById('messageInp').value,\n      mailTime: \"\".concat(currDate.getMonth() + 1, \"/\").concat(currDate.getDate(), \"/\").concat(currDate.getFullYear(), \" \").concat(currDate.getHours(), \":\").concat(currDate.getMinutes())\n    };\n    dispatch(sendMail(mailObj));\n    props.composeMail();\n  };\n\n  const deleteRecipientId = event => {\n    let recipientElem = event.target.parentElement;\n    let recipientId = recipientElem.getAttribute('data-key');\n    let updateSelectUserList = selectUserIdList.filter(el => {\n      return el !== recipientId;\n    });\n    setSelectUserIdList([updateSelectUserList]);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"compose-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"New Message\", React.createElement(\"button\", {\n    id: \"closeComposeMail\",\n    onClick: () => props.composeMail(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"X\")), React.createElement(\"div\", {\n    className: \"container recipient-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"recipientList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, selectUserIdList.map(el => {\n    return React.createElement(\"span\", {\n      className: \"recipient\",\n      key: el,\n      \"data-key\": el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, userList[el] && userList[el].firstName, React.createElement(\"span\", {\n      className: \"recipient-del\",\n      onClick: deleteRecipientId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"X\"));\n  })), React.createElement(\"input\", {\n    id: \"recipientInp\",\n    name: \"recipients\",\n    placeholder: \"Recipients\",\n    onChange: handleRecipientChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container subject-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"subjectInp\",\n    type: \"text\",\n    name: \"subject\",\n    placeholder: \"Subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container message-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    id: \"messageInp\",\n    name: \"message\",\n    placeholder: \"Type Something here..\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"sendMailBtn\",\n    onClick: handleSendMail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Send\")), React.createElement(\"div\", {\n    className: \"user-mail-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, userMailIdList.map(el => {\n    return React.createElement(\"div\", {\n      className: \"user-mail-details\",\n      key: el,\n      \"data-key\": el,\n      onClick: handleUserSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-mail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, userList[el].firstName), React.createElement(\"div\", {\n      className: \"user-mail-id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, userList[el].emailId));\n  })));\n}","map":{"version":3,"sources":["E:\\AJAY-offce_works\\Projects\\ReactProj\\doodleblue-mail-app\\src\\mail-details\\compose-mail\\ComposeMail.js"],"names":["React","useState","useSelector","useDispatch","sendMail","ComposeMail","props","userId","user","userList","state","accReducer","dispatch","userMailIdList","setUserMailIdList","selectUserIdList","setSelectUserIdList","handleRecipientChange","event","tempVal","target","value","length","filterUserId","Object","keys","filter","el","firstName","toLowerCase","startsWith","document","querySelector","classList","add","remove","handleUserSelect","selectUserId","getAttribute","handleSendMail","currDate","Date","recipientsId","mailObj","senderId","mailSubject","getElementById","mailBody","mailTime","getMonth","getDate","getFullYear","getHours","getMinutes","composeMail","deleteRecipientId","recipientElem","parentElement","recipientId","updateSelectUserList","map","emailId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sendMail } from './../../actions';\r\nimport './composemail.css';\r\n\r\nexport default function ComposeMail(props) {\r\n    const { userId } = props.user;\r\n    const userList = useSelector(state => state.accReducer);\r\n    const dispatch = useDispatch();\r\n    const [userMailIdList, setUserMailIdList] = useState([]);\r\n    const [selectUserIdList, setSelectUserIdList] = useState([]);\r\n\r\n    const handleRecipientChange = (event) => {\r\n        let tempVal = event.target.value;\r\n        if (tempVal.length >= 3) {\r\n            let filterUserId = Object.keys(userList).filter(el => {\r\n                return userId != el && userList[el] && userList[el].firstName.toLowerCase().startsWith(tempVal.toLowerCase());\r\n            });\r\n            if (filterUserId.length > 0) {\r\n                setUserMailIdList([filterUserId]);\r\n                document.querySelector('.user-mail-list').classList.add('active');\r\n            }\r\n        } else {\r\n            document.querySelector('.user-mail-list').classList.remove('active');\r\n        }\r\n    }\r\n\r\n    const handleUserSelect = (event) => {\r\n        document.querySelector('.user-mail-list').classList.remove('active');\r\n        let selectUserId = event.target.getAttribute('data-key');\r\n        setSelectUserIdList([...selectUserIdList, selectUserId]);\r\n        setUserMailIdList([]);\r\n        event.target.value = '';\r\n    }\r\n\r\n    const handleSendMail = () => {\r\n        let currDate = new Date()\r\n        let recipientsId = [];\r\n        // let recipientList = document.querySelector('#recipientList').children\r\n        // for (let i = 0; i < recipientList.length; i++) {\r\n        //     recipientsId(recipientList[0].getAttribute('data-key'));\r\n        // }\r\n        let mailObj = {\r\n            senderId: userId,\r\n            recipientsId: selectUserIdList,\r\n            mailSubject: document.getElementById('subjectInp').value,\r\n            mailBody: document.getElementById('messageInp').value,\r\n            mailTime: `${currDate.getMonth() + 1}/${currDate.getDate()}/${currDate.getFullYear()} ${currDate.getHours()}:${currDate.getMinutes()}`\r\n        }\r\n        dispatch(sendMail(mailObj))\r\n        props.composeMail();\r\n    }\r\n\r\n    const deleteRecipientId = (event) => {\r\n        let recipientElem = event.target.parentElement;\r\n        let recipientId = recipientElem.getAttribute('data-key');\r\n        let updateSelectUserList = selectUserIdList.filter(el => {\r\n            return el !== recipientId;\r\n        });\r\n        setSelectUserIdList([updateSelectUserList]);\r\n    }\r\n\r\n    return (\r\n        <div className='compose-mail'>\r\n            <div className='header'>\r\n                New Message\r\n                <button id=\"closeComposeMail\" onClick={() => props.composeMail()}>X</button>\r\n            </div>\r\n            <div className='container recipient-container'>\r\n                <div className='recipientList'>\r\n                    {\r\n                        selectUserIdList.map(el => {\r\n                            return (\r\n                                <span className='recipient' key={el} data-key={el} >\r\n                                    {userList[el] && userList[el].firstName}\r\n                                    <span className='recipient-del' onClick={deleteRecipientId}>X</span>\r\n                                </span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <input id=\"recipientInp\" name='recipients' placeholder='Recipients' onChange={handleRecipientChange} />\r\n            </div>\r\n            <div className='container subject-container'>\r\n                <input id=\"subjectInp\" type='text' name='subject' placeholder='Subject' />\r\n            </div>\r\n            <div className='container message-container'>\r\n                <textarea id=\"messageInp\" name='message' placeholder='Type Something here..' />\r\n            </div>\r\n            <div className='container footer'>\r\n                <button id=\"sendMailBtn\" onClick={handleSendMail}>Send</button>\r\n            </div>\r\n            <div className='user-mail-list'>\r\n                {\r\n                    userMailIdList.map(el => {\r\n                        return (\r\n                            <div className='user-mail-details' key={el} data-key={el} onClick={handleUserSelect}>\r\n                                <div className='user-mail-name'>{userList[el].firstName}</div>\r\n                                <div className='user-mail-id'>{userList[el].emailId}</div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}