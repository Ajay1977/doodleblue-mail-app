{"ast":null,"code":"var _jsxFileName = \"E:\\\\AJAY-offce_works\\\\Projects\\\\ReactProj\\\\doodleblue-mail-app\\\\src\\\\mail-details\\\\compose-mail\\\\ComposeMail.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { sendMail } from './../../actions';\nimport './composemail.css';\nexport default function ComposeMail(props) {\n  const userId = props.user.userId;\n  const userList = useSelector(state => state.accReducer);\n  const dispatch = useDispatch();\n  let userMailIdList = [];\n\n  const handleRecipientChange = event => {\n    userMailIdList = [];\n    let tempVal = event.target.value;\n\n    if (tempVal.length >= 3) {\n      userMailIdList = Object.keys(userList).filter(userId => {\n        return userList[userId].firstName.toLowerCase().startsWith(tempVal.toLowerCase());\n      });\n    }\n  };\n\n  const handleUserSelect = event => {\n    let selectUserId = event.target.getAttribute('data-key');\n    let listElem = document.querySelector('.recipientList');\n    let mailBadgeElem = document.createElement('span');\n    mailBadgeElem.classList.add('recipient');\n    mailBadgeElem.setAttribute('data-key', selectUserId);\n    mailBadgeElem.innerHTML = \"\".concat(userList[selectUserId].firstName, \"<span class='recipient-del'>X</span>\");\n    listElem.appendChild(mailBadgeElem);\n  };\n\n  const handleSendMail = () => {\n    let currDate = new Date();\n    let recipientsId = [];\n    let recipientList = document.querySelector('#recipientList').children;\n\n    for (let i = 0; i < recipientList.length; i++) {\n      recipientsId(recipientList[0].getAttribute('data-key'));\n    }\n\n    let mailObj = {\n      senderId: userId,\n      recipientsId: recipientsId,\n      mailSubject: document.getElementById('subjectInp').value,\n      mailBody: document.getElementById('messageInp').value,\n      mailTime: \"\".concat(currDate.getMonth() + 1, \"/\").concat(currDate.getcurrDate(), \"/\").concat(currDate.getFullYear(), \" \").concat(currDate.getHours(), \":\").concat(currDate.getMinutes())\n    };\n    dispatch(sendMail(mailObj));\n    props.composeMail();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"compose-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"New Message\", React.createElement(\"button\", {\n    id: \"closeComposeMail\",\n    onClick: () => props.composeMail(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"X\")), React.createElement(\"div\", {\n    className: \"container recipient-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"recipientList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    id: \"recipientInp\",\n    name: \"recipients\",\n    placeholder: \"Recipients\",\n    onChange: this.handleRecipientChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container subject-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"subjectInp\",\n    type: \"text\",\n    name: \"subject\",\n    placeholder: \"Subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container message-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    id: \"messageInp\",\n    name: \"message\",\n    placeholder: \"Type Something here..\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"sendMailBtn\",\n    onClick: handleSendMail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Send\")), React.createElement(\"div\", {\n    className: \"user-mail-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, userMailIdList.map(el => {\n    return React.createElement(\"div\", {\n      className: \"user-mail-details\",\n      \"data-key\": el,\n      onClick: handleUserSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-mail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, userList[el].firstName), React.createElement(\"div\", {\n      className: \"user-mail-id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, userList[el].emailId));\n  })));\n}","map":{"version":3,"sources":["E:\\AJAY-offce_works\\Projects\\ReactProj\\doodleblue-mail-app\\src\\mail-details\\compose-mail\\ComposeMail.js"],"names":["React","useState","useSelector","useDispatch","sendMail","ComposeMail","props","userId","user","userList","state","accReducer","dispatch","userMailIdList","handleRecipientChange","event","tempVal","target","value","length","Object","keys","filter","firstName","toLowerCase","startsWith","handleUserSelect","selectUserId","getAttribute","listElem","document","querySelector","mailBadgeElem","createElement","classList","add","setAttribute","innerHTML","appendChild","handleSendMail","currDate","Date","recipientsId","recipientList","children","i","mailObj","senderId","mailSubject","getElementById","mailBody","mailTime","getMonth","getcurrDate","getFullYear","getHours","getMinutes","composeMail","map","el","emailId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sendMail } from './../../actions';\r\nimport './composemail.css';\r\n\r\nexport default function ComposeMail(props) {\r\n    const { userId } = props.user;\r\n    const userList = useSelector(state => state.accReducer);\r\n    const dispatch = useDispatch();\r\n    let userMailIdList = [];\r\n\r\n    const handleRecipientChange = (event) => {\r\n        userMailIdList = [];\r\n        let tempVal = event.target.value;\r\n        if (tempVal.length >= 3) {\r\n            userMailIdList = Object.keys(userList).filter(userId => {\r\n                return userList[userId].firstName.toLowerCase().startsWith(tempVal.toLowerCase());\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleUserSelect = (event) => {\r\n        let selectUserId = event.target.getAttribute('data-key');\r\n        let listElem = document.querySelector('.recipientList');\r\n        let mailBadgeElem = document.createElement('span');\r\n        mailBadgeElem.classList.add('recipient');\r\n        mailBadgeElem.setAttribute('data-key', selectUserId);\r\n        mailBadgeElem.innerHTML = `${userList[selectUserId].firstName}<span class='recipient-del'>X</span>`;\r\n        listElem.appendChild(mailBadgeElem);\r\n    }\r\n\r\n    const handleSendMail = () => {\r\n        let currDate = new Date()\r\n        let recipientsId = [];\r\n        let recipientList = document.querySelector('#recipientList').children\r\n        for (let i = 0; i < recipientList.length; i++) {\r\n            recipientsId(recipientList[0].getAttribute('data-key'));\r\n        }\r\n        let mailObj = {\r\n            senderId: userId,\r\n            recipientsId: recipientsId,\r\n            mailSubject: document.getElementById('subjectInp').value,\r\n            mailBody: document.getElementById('messageInp').value,\r\n            mailTime: `${currDate.getMonth() + 1}/${currDate.getcurrDate()}/${currDate.getFullYear()} ${currDate.getHours()}:${currDate.getMinutes()}`\r\n        }\r\n        dispatch(sendMail(mailObj))\r\n        props.composeMail();\r\n    }\r\n\r\n    return (\r\n        <div className='compose-mail'>\r\n            <div className='header'>\r\n                New Message\r\n                <button id=\"closeComposeMail\" onClick={() => props.composeMail()}>X</button>\r\n            </div>\r\n            <div className='container recipient-container'>\r\n                <div className='recipientList'>\r\n                </div>\r\n                <textarea id=\"recipientInp\" name='recipients' placeholder='Recipients' onChange={this.handleRecipientChange} />\r\n            </div>\r\n            <div className='container subject-container'>\r\n                <input id=\"subjectInp\" type='text' name='subject' placeholder='Subject' />\r\n            </div>\r\n            <div className='container message-container'>\r\n                <textarea id=\"messageInp\" name='message' placeholder='Type Something here..' />\r\n            </div>\r\n            <div className='container footer'>\r\n                <button id=\"sendMailBtn\" onClick={handleSendMail}>Send</button>\r\n            </div>\r\n            <div className='user-mail-list'>\r\n                {\r\n                    userMailIdList.map(el => {\r\n                        return (\r\n                            <div className='user-mail-details' data-key={el} onClick={handleUserSelect}>\r\n                                <div className='user-mail-name'>{userList[el].firstName}</div>\r\n                                <div className='user-mail-id'>{userList[el].emailId}</div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}